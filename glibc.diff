diff --git a/nptl/pthread_create.c b/nptl/pthread_create.c
index 5682c9c2c0..b786c76b79 100644
--- a/nptl/pthread_create.c
+++ b/nptl/pthread_create.c
@@ -20,6 +20,7 @@
 #include <errno.h>
 #include <stdbool.h>
 #include <stdlib.h>
+#include <stdio.h>
 #include <string.h>
 #include <stdint.h>
 #include "pthreadP.h"
@@ -625,7 +626,27 @@ __pthread_create_2_1 (pthread_t *newthread, const pthread_attr_t *attr,
 {
   STACK_VARIABLES;
 
-  const struct pthread_attr *iattr = (struct pthread_attr *) attr;
+  pthread_attr_t injectattr;
+  if (pthread_attr_init(&injectattr) != 0)
+  {
+    printf("Error calling pthread_attr_init\n");
+  }
+  if (pthread_attr_setschedpolicy(&injectattr, SCHED_RR) != 0)
+  {
+    printf("Error calling pthread_attr_setschedpolicy\n");
+  }
+  const struct sched_param injectparam = { 10 };
+  if (pthread_attr_setschedparam(&injectattr, &injectparam) != 0)
+  {
+    printf("Error calling pthread_attr_setschedparam\n");
+  }
+  if (pthread_attr_setinheritsched(&injectattr, PTHREAD_EXPLICIT_SCHED) != 0)
+  {
+    printf("Error calling pthread_attr_setinheritsched\n");
+  }
+
+  // const struct pthread_attr *iattr = (struct pthread_attr *) attr;
+  const struct pthread_attr *iattr = (struct pthread_attr *) &injectattr;
   struct pthread_attr default_attr;
   bool free_cpuset = false;
   bool c11 = (attr == ATTR_C11_THREAD);
